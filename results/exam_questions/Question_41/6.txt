Question: The deterministic "select" algorithm, which we studied in class, works as follows:
a. The array is divided into groups of size 5
b. Sort each group
c. Choose a pivot as the median of the medians (recursively)
d. Perform "partition" with the chosen pivot
e. Recursively apply the algorithm on the relevant part.

Assume that instead of groups of size 5, we take groups of size 3. 
In this question, we will deal with the running time of the new algorithm with groups of size 3.
What is the cost of step b? 
Cost:
Explanation:
3o-mini: Step b requires sorting each group of 3. Since there are roughly n/3 groups, and sorting a constant-sized group (with size 3) takes constant time, the total cost for step b is proportional to n/3, which is O(n).

Explanation:
1. The entire array of size n is divided into groups, each of size 3. There are about n/3 such groups.
2. Sorting any group of 3 elements takes a constant amount of time (for example, by comparing and swapping as needed).
3. Therefore, the total time spent on sorting all the groups is (n/3) Ã— O(1), which simplifies to O(n).