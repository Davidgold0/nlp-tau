Question: We build a hashing table of size \( m \) using the open addressing method (i.e., all the elements are in the hashing table without using pointers). We use a randomly chosen hash function of the form \( h(k, i) \), where \( k \) is the key that we want to insert into the table, and \( i \) is the probe number. (This is the uniform probing method. The value returned by calling \( h(k, i) \) is a uniformly chosen integer between 2 and \( m-1 \), independent of the previous random selections). The table already contains \( n \) distinct elements. We now perform a search for an element that is not in the table. What is the expected number of table slots examined during the search? Provide as tight a non-asymptotic answer as possible.
3o-mini: We will show that if the table has m slots and currently holds n distinct elements (so that m – n slots are empty), then when using uniformly random probing the expected number of table slots examined in an unsuccessful search is

  m / (m – n).

Let’s explain why.

Step 1. How the Probing Works

In our open‐addressing scheme a search for a key (not in the table) proceeds as follows. We choose a probe number i = 0, 1, 2, … and, for each i, we compute

  j = h(k, i),

where h(k, i) is a uniformly random number chosen (independently for each call) between two given bounds (here it is stated between 2 and m – 1; the details of the range do not affect the analysis as long as every slot is hit with the correct uniform probability). In particular, each probe is independent and uniformly distributed over the m table slots. (Often the first few values might be computed by a different function; however, the analysis below applies under the assumption that every probe is independent and has the same distribution.)

Step 2. The Success/Failure Probability on a Probe

Since the table holds n elements (each placed in a unique slot) and m – n slots are empty, any probe j will hit an empty slot with probability

  p = (m – n) / m.

Conversely, the probability that the probe lands on an occupied slot is n/m.

Step 3. Modeling the Search

The search stops as soon as we hit an empty slot. Since the probes are independent and each trial “succeeds” (finds an empty slot) with probability p = (m – n) / m, the number of probes until success follows a geometric distribution with parameter

  p = (m – n) / m.

For a geometric random variable, the expected number of trials is 1/p. Thus the expected number of probes is

  E[number of probes] = 1 / p = m / (m – n).

Step 4. The Final Answer

Thus, when you search for a key that is not in the table, you expect to examine

  m / (m – n)

table slots before finding an empty one.

This is a nonasymptotic closed‐form answer valid for all values of m and n (with n < m).