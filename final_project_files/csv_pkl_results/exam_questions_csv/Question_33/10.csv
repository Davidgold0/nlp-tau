"Question: We build a hashing table of size \( m \) using the open addressing method (i.e., all the elements are in the hashing table without using pointers). We use a randomly chosen hash function of the form \( h(k, i) \), where \( k \) is the key that we want to insert into the table, and \( i \) is the probe number. (This is the uniform probing method. The value returned by calling \( h(k, i) \) is a uniformly chosen integer between 2 and \( m-1 \), independent of the previous random selections). The table already contains \( n \) distinct elements. We now perform a search for an element that is not in the table. What is the expected number of table slots examined during the search? Provide as tight a non-asymptotic answer as possible."
"3o-mini: We begin by noting that in an open‐addressing hash table with m slots and n elements already in it, there are exactly m − n empty slots. When we search for an element not in the table, the search examines slots until it finds an empty one."
"In the setting of this problem the hash function is “uniform” in that each probe returns a randomly chosen table index (independently of the others) from almost all the slots (in our description, from the integers 2 through m − 1 – the specifics of the range are not important; the key is that each probe is independent and uniformly random among the table slots). Because of this independence, each probe is like drawing a slot at random with replacement."
For any given probe the probability that the slot is empty is (m − n)/m. Therefore the number of probes until an empty slot is found is a geometric random variable with success probability
  p = (m − n)/m.
(The “success” here is finding an empty slot.) It is a well-known fact that the expectation of a geometric random variable with success probability p is 1/p. Thus the expected number of probes (i.e. table slots examined) is
  E[# probes] = 1/p = m/(m − n).
This answer is non‐asymptotic and holds as long as m − n > 0.
"Thus, to answer the question: The expected number of table slots examined during the search for an element that is not in the table is"
  m/(m − n).
