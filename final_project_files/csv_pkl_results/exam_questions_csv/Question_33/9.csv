"Question: We build a hashing table of size \( m \) using the open addressing method (i.e., all the elements are in the hashing table without using pointers). We use a randomly chosen hash function of the form \( h(k, i) \), where \( k \) is the key that we want to insert into the table, and \( i \) is the probe number. (This is the uniform probing method. The value returned by calling \( h(k, i) \) is a uniformly chosen integer between 2 and \( m-1 \), independent of the previous random selections). The table already contains \( n \) distinct elements. We now perform a search for an element that is not in the table. What is the expected number of table slots examined during the search? Provide as tight a non-asymptotic answer as possible."
"3o-mini: We will show that, under the assumptions of “uniform probing,” the expected number of probes (that is, the number of table slots examined) when searching for a key that is not in the table is exactly"
  m/(m – n).
"To explain in detail, suppose we have a hash table with m slots that already contains n distinct keys. (The load factor is α = n/m.) When we search for a key not in the table, we run a probe‐sequence defined by"
"  h(k, 0), h(k, 1), h(k, 2), … "
"where for each probe number i the “hash function” h(k, i) returns an index chosen uniformly at random from the table. (In the description given the returned value is uniformly chosen from the integers between 2 and m – 1. One may think of this as “using” m – 2 out of m slots; in what follows it is essentially the same idea. One can also reinterpret m as the number of slots from which the probe values are chosen.) Moreover, the choices for different values of i are made independently."
"Because the n keys already stored in the table are in fixed (and distinct) locations, a random probe will “hit” an occupied slot (that is, one that contains one of the n keys) with probability"
  p = n/m
and hit an empty slot (one available for the search to terminate) with probability
  q = 1 – p = (m – n)/m.
"Notice that when you probe the table you are not “removing” or “marking” slots as examined – if you happen to probe a slot that you already looked at you still “examine” it again. (In other words, even if the same slot is found twice in the sequence, both examinations are counted.) Hence each probe is an independent trial with the same “success” (empty slot) probability q."
"Because you stop the search as soon as an empty slot is encountered, the number of probes T is a geometrically distributed random variable with success probability q; that is,"
"  Pr{T = i} = (1 – q)^(i–1) q  for i = 1, 2, 3, …"
and it is well known that the expectation of a geometric r.v. with success probability q is
  E[T] = 1/q.
Substituting q = (m – n)/m we get
  E[T] = 1/((m – n)/m) = m/(m – n).
"Thus, the expected number of table slots examined in an unsuccessful search using uniform probing is exactly"
  m/(m – n).
"This is a “tight,” non‐asymptotic answer that holds for any m and n (with n < m)."
